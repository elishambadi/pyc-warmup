version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: pyc-warmup-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env  # Make sure this is loaded
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: postgres  # PostgreSQL service name
      GIN_MODE: release   # or debug depending on your environment
      SEED_DB: "false"    # Consistent environment variable
    ports:
      - "8083:8000"      # Expose port 8080 for your app
    depends_on:
      postgres:
        condition: service_healthy  # Ensure PostgreSQL is ready before app starts
    networks:
      - app-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    name: pyc_warmup_postgres_data

networks:
  app-network:
    driver: bridge
